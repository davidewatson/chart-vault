---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  labels:
    app: {{ template "vault.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  config.hcl: |
    # the following are defined in each replicas environment, through corresponding VAULT_* variables 
    # api_addr
    # cluster_address

    {{- if eq .Values.vault.backend "inmem" }}
      storage "inmem" { }
    {{- else if eq .Values.vault.backend "etcd" }}
      storage "etcd"
      {
      {{- if .Values.vault.etcdBackend.discoverySRV }}
          discovery_srv = {{ .Values.Vault.etcdBackend.discoverySRV }}
      {{- end }}

      {{- if .Values.vault.etcdBackend.tls.enabled }}
          address = "https://{{ .Values.vault.etcdBackend.address }}:{{ .Values.vault.etcdBackend.port }}"
          tls_ca_file = "/etc/etcd/tls/{{ .Values.vault.etcdBackend.tls.secret.caFile }}"
          tls_cert_file = "/etc/etcd/tls/{{ .Values.vault.etcdBackend.tls.secret.certFile }}"
          tls_key_file = "/etc/etcd/tls/{{ .Values.vault.etcdBackend.tls.secret.keyFile }}"
      {{- else }}
          address = "http://{{ .Values.vault.etcdBackend.address }}:{{ .Values.vault.etcdBackend.port }}"
      {{- end }}

          etcd_api = {{ .Values.vault.etcdBackend.etcdApi | quote }}
      {{- if gt .Values.vault.replicas 1.0 }}
          ha_enabled = "true"
      {{- else }}
          ha_enabled = "false"
      {{- end }}
          
          path = {{ default (print .Release.Namespace "/" .Release.Name "/" ) .Values.vault.etcdBackend.path | quote }}  
          sync = {{ default "false" .Values.vault.etcdBackend.sync | quote }}
          username = {{ default "" .Values.vault.etcdBackend.username | quote }}
          password = {{ default "" .Values.vault.etcdBackend.password | quote }}
      }
    {{- end }}

      listener "tcp" {
        address = "0.0.0.0:{{ .Values.vault.listenerPort }}"
        cluster_address = "0.0.0.0:{{ .Values.vault.clusterListenerPort }}"
    {{- if .Values.vault.tls.enabled }}
        tls_key_file = "/etc/vault/tls/{{ .Values.vault.tls.secret.keyFile }}"
        tls_cert_file = "/etc/vault/tls/{{ .Values.vault.tls.secret.certFile }}"
        tls_client_ca_file = "/etc/vault/tls/{{ .Values.vault.tls.secret.caFile }}"
    {{- else}}
        tls_disable = "true"
    {{- end}}
      }

      disable_mlock = false
