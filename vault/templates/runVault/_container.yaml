{{/*
Create helm partial for Vault container
*/}}
{{- define "containerVault" }}
- name: run-vault
  image: "{{.Values.vault.image}}:{{.Values.vault.imageTag}}"
  securityContext:
    capabilities:
      add:
      - IPC_LOCK
  imagePullPolicy: {{ .Values.vault.imagePullPolicy }}
  ports:
  - name: listener
    containerPort: {{ .Values.vault.listenerPort }}
  - name: clusterlistener
    containerPort: {{ .Values.vault.clusterListenerPort }}
  readinessProbe:
    httpGet:
  {{- if .Values.vault.etcdBackend.tls.enabled }}
      scheme: HTTPS
  {{- else }}
      scheme: HTTP
  {{- end }}
      path: /v1/sys/health?standbyok=true&activecode=200
      port: {{ .Values.vault.listenerPort }}
    initialDelaySeconds: 5
    periodSeconds: 5
  volumeMounts:
  - name: config
    mountPath: /etc/vault/cfg
    readOnly: true
{{- if .Values.vault.tls.enabled }}
  - name: vault-tls-data
    mountPath: {{ .Values.vault.tls.secret.mountPath }}
{{- end }}
{{- if .Values.vault.etcdBackend.tls.enabled }}
  - name: etcd-tls
    mountPath: {{ .Values.vault.etcdBackend.tls.secret.mountPath }}
{{- end }}
  env:
  - name: MY_POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: SCRIPT
    value: &startVault |-
      #!/bin/busybox sh

      scheme="{{- if .Values.vault.tls.enabled }}https{{- else }}http{{- end }}"
      addr="${MY_POD_NAME}.{{ template "vault.name" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}"

      export VAULT_API_ADDR="$scheme://$addr:{{ .Values.vault.listenerPort }}"
      export VAULT_CLUSTER_ADDR="$addr:{{ .Values.vault.clusterListenerPort }}"

      # print current environment
      printenv

      cat /etc/vault/cfg/config.hcl

      # start vault server
      vault server -config=/etc/vault/cfg/config.hcl{{- if .Values.vault.enableDebug }} -log-level=debug{{- end }}
  resources:
    limits:
      cpu: {{ .Values.vault.cpu }}
      memory: {{ .Values.vault.memory }}
    requests:
      cpu: {{ .Values.vault.cpu }}
      memory: {{ .Values.vault.memory }}
  command: [ "bin/sh" ]
  args: ["-c", *startVault]
{{- end }}