---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "vault.fullname" . }}
  labels:
    app: {{ template "vault.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.vault.component }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  vault-start.sh: |-
{{ .Files.Get "vault-start.sh" | indent 4 }}
  config.json: |
    {{- if eq .Values.vault.backend "inmem" }}
      backend "inmem" { }
    {{- end}}

    {{- if eq .Values.vault.backend "consul" }}
      backend "consul"
      {
          address = {{ .Values.vault.consulBackend.address | quote }}
      {{- if .Values.vault.enableTLS }}
          scheme = "https"
      {{- else }}
          scheme = "http"
      {{- end }}
          token = {{ .Values.vault.consulBackend.token | quote }}
      }
    {{- else if eq .Values.vault.backend "etcd" }}
      backend "etcd"
      {
      {{- if .Values.vault.etcdBackend.discoverySRV }}
          discovery_srv = {{ .Values.Vault.etcdBackend.discoverySRV }}
      {{- end }}
      {{- if .Values.vault.enableTLS }}
          address = "https://{{ .Values.vault.etcdBackend.address }}:{{ .Values.vault.etcdBackend.port }}"
          tls_ca_file = {{ default "/etc/vault/tls/ca.crt" .Values.vault.etcdBackend.clientCA | quote }}
          tls_cert_file = {{ default "/etc/vault/tls/vault.crt" .Values.vault.etcdBackend.clientCert | quote }}
          tls_key_file = {{ default "/etc/vault/tls/vault.key" .Values.vault.etcdBackend.clientKey | quote }}
      {{- else }}
          address = "http://{{ .Values.vault.etcdBackend.address }}:{{ .Values.vault.etcdBackend.port }}"
      {{- end }}
          etcd_api = {{ .Values.vault.etcdBackend.etcdApi | quote }}
      {{- if gt .Values.vault.replicas 1.0 }}
          ha_enabled = {{ "true" | quote }}
          cluster_addr = {{ default "" .Values.vault.etcdBackend.clusterAddress | quote }}
          disable_clustering = {{ default "false" .Values.vault.etcdBackend.disableClustering | quote }}
      {{- if .Values.vault.enableTLS }}
          redirect_addr = "{{ default "https://0.0.0.0" .Values.vault.etcdBackend.redirectAddr }}:{{ default 8200 .Values.vault.etcdBackend.port }}"
      {{- else }}
          redirect_addr = "{{ default "http://0.0.0.0" .Values.vault.etcdBackend.redirectAddr }}:{{ default 8200 .Values.vault.etcdBackend.port }}"
      {{- end }}
      {{- else }}
          ha_enabled = {{ "false" | quote }}
      {{- end }}
      {{- if .Values.vault.etcdBackend.path }}
          path = {{ .Values.vault.etcdBackend.path | quote }}
      {{- end }}
          sync = {{ default "false" .Values.vault.etcdBackend.sync | quote }}
          username = {{ default "" .Values.vault.etcdBackend.username | quote }}
          password = {{ default "" .Values.vault.etcdBackend.password | quote }}
      }
    {{- end }}

      listener "tcp" {
    {{- if .Values.vault.enableTLS }}
        address = "0.0.0.0:{{ default 443 .Values.vault.listenerPort }}"
        tls_key_file = "/etc/vault/tls/vault.key"
        tls_cert_file = "/etc/vault/tls/vault.crt"
        tls_client_ca_file = "/etc/vault/tls/ca.crt"
    {{- else}}
        address = "0.0.0.0:{{ default 80 .Values.vault.listenerPort }}"
        tls_disable = true
    {{- end}}
      }
#   disable_mlock = true
