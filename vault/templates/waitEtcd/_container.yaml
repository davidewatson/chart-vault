{{/*
Create helm partial for Vault initialization
*/}}
{{- define "containerWaitEtcd" }}
- name: wait-etcd
  image: "{{.Values.vault.image}}:{{.Values.vault.imageTag}}"
  imagePullPolicy: {{ .Values.vault.tls.imagePullPolicy }}
  {{- if .Values.vault.etcdBackend.tls.enabled }}
  volumeMounts:
  - name: etcd-tls
    mountPath: {{ .Values.vault.etcdBackend.tls.secret.mountPath }}
    readOnly: true
  {{- end }}
  env:
  - name: SCRIPT
    value: &waitEtcd |-
    {{- if .Values.vault.etcdBackend.tls.enabled }}
      until curl --connect-timeout 1 --cert {{ .Values.vault.etcdBackend.tls.secret.mountPath }}/{{ .Values.vault.etcdBackend.tls.secret.certFile }} --cert-type PEM --key {{ .Values.vault.etcdBackend.tls.secret.mountPath }}/{{ .Values.vault.etcdBackend.tls.secret.keyFile }} --key-type PEM --cacert {{ .Values.vault.etcdBackend.tls.secret.mountPath }}/{{ .Values.vault.etcdBackend.tls.secret.caFile }} https://{{ .Values.vault.etcdBackend.address }}:{{ .Values.vault.etcdBackend.port }}/v2/machines; do sleep 2; done
    {{- else }}
      until curl --connect-timeout 1 http://{{ .Values.vault.etcdBackend.address }}:{{ .Values.vault.etcdBackend.port }}/v2/machines; do sleep 2; done
    {{- end }}
  command: [ "/bin/sh" ]
  args: ["-c", *waitEtcd]
{{- end }}
